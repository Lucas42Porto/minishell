char	*ft_strnstr2(const char *haystack, const char *needle, size_t len)
{
	size_t	h;
	size_t	n;

	h = 0;
	if (needle[0] == '\0')
		return ((char *)haystack);
	while (haystack[h] != '\0')
	{
		n = 0;
		while (haystack[h + n] == needle[n] && (h + n) < len)
		{
			if (haystack[h + n] == '\0' && needle[n] == '\0')
				return ((char *)&haystack[h]);
			n++;
		}
		if (needle[n] == '\0')
			return ((char *)haystack + h + n);
		h++;
	}
	return (0);
}

// char	*get_prompt(char *prompt)
// {
// 	char	*user;
// 	char	*home;
// 	char	*pwd;
// 	char	*tmp;

// 	user = getenv("USER");
// 	home = getenv("HOME");
// 	pwd = getenv("PWD");

// 	prompt = ft_strdup(GREEN "minishell@");
// 	prompt = ft_strjoin_free_s1(prompt, user);
// 	prompt = ft_strjoin_free_s1(prompt, WHITE ":");
// 	prompt = ft_strjoin_free_s1(prompt, BLUE "~");
// 	if (ft_strcmp(pwd, home))
// 	{
// 		tmp = ft_strnstr2(pwd, home, ft_strlen(home));
// 		prompt = ft_strjoin_free_s1(prompt, tmp);
// 	}
// 	prompt = ft_strjoin_free_s1(prompt, WHITE "$ " RESET);
// 	return (prompt);
// }